#!/usr/bin/env python 
#
# A simple python fontforge script to show the version string of a font 
# you need a recent version of fontforge.
# The script works for all font formats fontforge supports.
#
# See the various resources and websites of the open font community:
# http://planet.open-fonts.org
# http://utilities.open-fonts.org
# 

# Copyright (c) 2010, Nicolas Spalinger

# Released under the MIT license.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.


import fontforge, sys
required_version = "20100212"

print("Fontforge version:")
print(fontforge.__version__, fontforge.version())

if fontforge.version() < required_version:
    print ("Your version of FontForge is too old - %s or newer is required" % (required_version))

def main():
    for f in sys.argv[1:] :
        font = fontforge.open(f)

    print (" ")
    print ("File: " + font.path)
    print ("Fontname: " + font.fontname)
    print ("Version (PS) with buildstamp and toolchain comments: ")
    print (font.version)
    print ("CID Version: ")
    print (font.cidversion)
    print ("PostScript Unique ID: ")
    print (font.uniqueid)
    names = {}
    for n in font.sfnt_names :
        if n[0] == "English (US)" :
            names[n[1]] = n[2]
    print ("Name table unique ID, buildstamp and toolchain comments: ")
    print (names.get('UniqueID'))
    print ("PostScript eXtended Unique ID: ")
    print (font.xuid)
    print ("Gasp table version: ")
    print ("SFNT revision: ")
    print (font.sfntRevision)
    print (font.gasp_version)
    print ("OS2 version: ")
    print (font.os2_version)
    print ("WOFF major version: ")
    print (font.woffMajor)
    print ("WOFF minor version: ")
    print (font.woffMinor)



if __name__ == '__main__':
    main()